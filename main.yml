# code: language=ansible

---
- name: Main playbook
  connection: local
  hosts: localhost
  gather_facts: true
  vars:
    should_be_root: "{{ true if ansible_pkg_mgr != 'brew' else false }}"
    upgrade_homebrew: false
    mas_email: '{{ lookup("env", "MAS_EMAIL") }}'
    mas_password: '{{ lookup("env", "MAS_PASSWORD") }}'
  vars_files:
    - config.yml
  pre_tasks:
    - name: Include playbook configuration
      include_vars: "{{ item }}"
      with_fileglob:
        - "{{ playbook_dir }}/config.yml"
      tags: qa

    - name: Get running ansible user
      ansible.builtin.set_fact:
        local_user: "{{ lookup('env', 'USER') }}"
        home_dir: "{{ lookup('env', 'HOME') }}"
        work_dir: "{{ playbook_dir | dirname }}"
        cacheable: true
      tags: qa

    - name: Top-level directory in project
      ansible.builtin.shell: git rev-parse --show-toplevel
      register: tld
      tags: qa

    - name: Set tld stdout fact
      ansible.builtin.set_fact:
        tld: "{{ tld.stdout }}"
      tags: qa

    - name: Set homebrew path
      ansible.builtin.set_fact:
        homebrew_path: /usr/local/bin/brew
      when: ansible_architecture != "arm64"
      become: true
      tags: qa

    - name: Set homebrew path
      ansible.builtin.set_fact:
        homebrew_path: /opt/homebrew/bin
      when: ansible_architecture == "arm64"
      become: true
      tags: qa

    - name: Ensuring homebrew is installed
      ansible.builtin.stat:
        path: "{{ homebrew_path }}"
      register: homebrew_check
      become: true
      tags: qa

    - name: Fail if homebrew is not installed and install_homebrew_if_missing is false
      ansible.builtin.fail:
        msg: Homebrew is missing... Install from http://brew.sh/
      when:
        - not homebrew_check.stat.exists
        - not install_homebrew_if_missing
      tags: qa

    - name: Installing homebrew
      ansible.builtin.shell: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when:
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing
      tags: qa

    - name: Install homebrew bash
      community.general.homebrew:
        name: bash
        state: present
      become: false
      become_user: "{{ ansible_env.SUDO_USER }}"
      tags: qa

    - name: Absolute path to homebrew bash
      ansible.builtin.shell: which bash
      register: homebrew_bash
      tags: qa

    - name: Set homebnrew bash stdout fact
      ansible.builtin.set_fact:
        homebrew_bash: "{{ homebrew_bash.stdout }}"
      tags: qa

    - name: Set bash to default shell
      ansible.builtin.shell: |
        chsh -s "{{ homebrew_bash }}" "{{ ansible_env.SUDO_USER }}"
      become: false
      become_user: "{{ ansible_env.SUDO_USER }}"
      tags: qa
  roles:
    - role: elliotweiser.osx-command-line-tools
    # TODO: qa
    - role: geerlingguy.dotfiles
      when: configure_dotfiles
      become: false
      become_user: "{{ ansible_env.SUDO_USER }}"
      tags: ['dotfiles', 'qa']
    - role: geerlingguy.mac.mas
      when: mas_installed_apps or mas_installed_app_ids
      become: false
      become_user: "{{ ansible_env.SUDO_USER }}"
      tags: mas
    - role: geerlingguy.mac.dock
      when: configure_dock
      become: true
      become_user: "{{ ansible_env.SUDO_USER }}"
      tags: dock
  tasks:
    - name: Apply macos homebrew tasks
      when: ansible_os_family == "Darwin"
      become: false
      become_user: "{{ ansible_env.SUDO_USER }}"
      block:
        - name: Installing homebrew taps
          community.general.homebrew_tap:
            name: "{{ item }}"
            state: present
          loop: "{{ homebrew_taps }}"

        - name: Upgrade homebrew
          community.general.homebrew:
            update_homebrew: "{{ upgrade_homebrew }}"

        - name: Install homebrew formulae
          community.general.homebrew:
            name: "{{ item }}"
            state: present
          loop: "{{ homebrew_installed_packages }}"

        - name: Install homebrew casks
          community.general.homebrew_cask:
            name: "{{ item }}"
            state: present
          loop: "{{ homebrew_cask_apps }}"

    - name: Run related tasks
      when: ansible_os_family == "Darwin"
      vars:
        git_user:
          - key: user.name
            value: pythoninthegrass
          - key: user.email
            value: 4097471+pythoninthegrass@users.noreply.github.com
      become: false
      become_user: "{{ ansible_env.SUDO_USER }}"
      block:
        - name: Setup git
          include_tasks: "{{ playbook_dir }}/tasks/git.yml"

        - name: Setup starship prompt
          include_tasks: "{{ playbook_dir }}/tasks/starship.yml"

        - name: Install runtimes
          include_tasks: "{{ playbook_dir }}/tasks/runtimes.yml"

  handlers:
    - name: Clear homebrew cache
      community.general.homebrew:
        name: "*"
        state: latest
        update_homebrew: true
        upgrade_all: true
      become: true
      become_user: "{{ ansible_env.SUDO_USER }}"
      listen: "homebrew cleanup"
