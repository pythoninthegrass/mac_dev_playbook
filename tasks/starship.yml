# code: language=ansible

---
- hosts: localhost
  connection: local
  become: false
  gather_facts: true
  any_errors_fatal: true
  vars:
    os_environment:
      - key: EDITOR
        value: vim
  pre_tasks:
    - name: Get running ansible user
      ansible.builtin.set_fact:
        local_user: "{{ lookup('env', 'USER') }}"
        home_dir: "{{ lookup('env', 'HOME') }}"
        work_dir: "{{ playbook_dir | dirname }}"
        cacheable: true
      delegate_to: localhost

    - name: Top-level directory in project
      ansible.builtin.shell: git rev-parse --show-toplevel
      register: tld

    - name: Set tld stdout fact
      ansible.builtin.set_fact:
        tld: "{{ tld.stdout }}"
  tasks:
    - name: Get starship install script
      ansible.builtin.get_url:
        url: https://starship.rs/install.sh
        dest: /tmp/starship_install.sh
        mode: '0755'
      become: false
      become_user: "{{ ansible_env.SUDO_USER }}"

    - name: Install starship
      ansible.builtin.shell:
        cmd: /tmp/starship_install.sh --yes
        executable: /bin/sh
      become: true
      become_user: "{{ ansible_env.SUDO_USER }}"

    - name: Create starship config directory
      ansible.builtin.file:
        path: "{{ home_dir }}/.config/"
        state: directory
      become: false
      become_user: "{{ ansible_env.SUDO_USER }}"

    - name: Copy starship config
      ansible.builtin.copy:
        src: "{{ tld }}/config/starship.toml"
        dest: "{{ home_dir }}/.config/starship.toml"
      become: false
      become_user: "{{ ansible_env.SUDO_USER }}"
